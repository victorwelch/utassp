<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone">
    <sp_rel_widget_clone action="INSERT_OR_UPDATE">
        <child display_value="UTASSP Attachment Paper Clip 3">4e48e423db807bc0e3ad22d4059619b4</child>
        <cloned>2019-03-06 18:47:56</cloned>
        <last_validated>2019-03-06 18:47:56</last_validated>
        <parent display_value="Ticket Attachments">9ee37281d7033100a9ad1e173e24d457</parent>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;standard&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function attachMate($scope, nowAttachmentHandler, $rootScope, spUtil, spModal, $log, spAriaUtil) {
	$scope.errorMessages = [];
	$scope.attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);
	$scope.data.action = "";

	spUtil.recordWatch($scope, "sys_attachment", "table_sys_id=" + $scope.data.sys_id, function(name, data) {
		$scope.attachmentHandler.getAttachmentList();
	});

	$scope.$evalAsync(function() {
		$scope.attachmentHandler.setParams($scope.data.table, $scope.data.sys_id, 1024 * 1024 * $scope.data.maxAttachmentSize);
		$scope.attachmentHandler.getAttachmentList();
	})

	$scope.hasAttachments = function() {
		return $scope.attachments &amp;&amp; $scope.attachments.length != 0;
	}

	$scope.canWrite = function() {
		return $scope.data.canWrite;
	}

	$scope.confirmDeleteAttachment = function(attachment) {
		spModal.confirm("${Delete Attachment?}").then(function() {
			$scope.attachmentHandler.deleteAttachment(attachment);
		})
	}

	$scope.$on('dialog.upload_too_large.show', function(e){
		$log.error($scope.data.largeAttachmentMsg);
		spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
	});

	$scope.$on('added_attachment', function(evt) {
		$scope.data.action = "added";
		spUtil.update($scope);
	});

	$scope.$on('sp.record.can_write', function(evt, answer) {
		$scope.data.canWrite = answer;
	});

	function appendError(error) {
		$scope.errorMessages.push(error);
		spUtil.addErrorMessage(error.msg + error.fileName);
	}

	function setAttachments(attachments, action) {
		if ($scope.submitting == true)
			return;

		$scope.attachments = attachments;
		if (!action)
			return;
		
		if (action === "added") {
			spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
		}

		$scope.data.action = action;
		spUtil.update($scope);
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as/&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;widget-ticket-attachments&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;Ticket Attachments&lt;/name&gt;&lt;option_schema&gt;[{"hint":"ID of referenced record","name":"record_id","section":"Data","label":"Record ID","type":"string"},{"hint":"Table name of referenced record","name":"record_table","section":"Data","label":"Record Table","type":"string"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
	data.sys_id = input.sys_id || options.record_id || $sp.getParameter("sys_id");
	data.table = input.table || options.record_table || $sp.getParameter("table");
	data.table = _getActualTable(data.table, data.sys_id);
	data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
	if (isNaN(data.maxAttachmentSize))
		data.maxAttachmentSize = 24;
	data.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");
	data.attachmentSuccessMsg = gs.getMessage("Attachment successfully uploaded");
	
	if (!data.table || !data.sys_id)
		return;

	var gr = new GlideRecord(data.table);
	if (!gr.isValid())
		return;
	
	if (!gr.get(data.sys_id))
		return;

	if (input &amp;&amp; input.action == "deleted") {
		gr.comments = input.action + " an attachment";
		gr.update();
	}

	data.canWrite = gr.canWrite();
	data.canAttach = gs.hasRole(gs.getProperty("glide.attachment.role")) &amp;&amp; GlideTableDescriptor.get(data.table).getED().getAttribute("no_attachment") != "true";
	data.canRead = gr.canRead();

	function _getActualTable(table, id) {
		if (!table)
			return table;
		
		var rec = new GlideRecord(table);
		if (!rec.isValid())
			return table;
		
		if (rec.get(id) &amp;&amp; rec.getValue('sys_class_name')) {
			return rec.getValue('sys_class_name');
		}
		return table;
	}
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2015-03-25 16:06:34&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;9ee37281d7033100a9ad1e173e24d457&lt;/sys_id&gt;&lt;sys_mod_count&gt;149&lt;/sys_mod_count&gt;&lt;sys_name&gt;Ticket Attachments&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal - Core" source="com.glide.service-portal"&gt;3ab88454db42030015fbfd741d9619ec&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_9ee37281d7033100a9ad1e173e24d457&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;system&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-11-07 16:29:31&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-if="data.canRead" class="panel panel-{{options.color}} b"&gt;
  &lt;div class="panel-heading padder-b-none"&gt;
    &lt;h2 class="h4 sp-attachments-header panel-title pull-left"&gt;
      ${Attachments}
    &lt;/h2&gt;
    &lt;div ng-if="::(data.canWrite &amp;&amp; data.canAttach)"&gt;
      &lt;sp-attachment-button&gt;&lt;/sp-attachment-button&gt;
    &lt;/div&gt;
    &lt;div class="clearfix"&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;!-- small device - hide body unless there are attachments --&gt;
  &lt;div class="panel-body" ng-class="{'hidden-xs': !hasAttachments()}"&gt;
    &lt;div ng-if="data.canWrite &amp;&amp; data.canAttach" ng-file-drop="attachmentHandler.onFileSelect($files)" class="sp-attachments"&gt;
      &lt;div class="sp-no-attachments text-center text-italic text-muted" ng-show="!hasAttachments()"&gt;
        &lt;em&gt;${Drop files here}&lt;/em&gt;
      &lt;/div&gt;
      &lt;now-attachments-list template="sp_attachment" /&gt;
    &lt;/div&gt;

    &lt;div ng-if="!data.canWrite || !data.canAttach" class="sp-attachments"&gt;
      &lt;div class="sp-no-attachments text-center text-muted" ng-show="!hasAttachments()"&gt;
        &lt;em&gt;${There are no attachments}&lt;/em&gt;
      &lt;/div&gt;
      &lt;now-attachments-list template="sp_attachment" /&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;!-- no attachments msg at phone size when can't write --&gt;
  &lt;div class="panel-body visible-xs-block" ng-if="!hasAttachments() &amp;&amp; (!data.canWrite || !data.canAttach)"&gt;
    &lt;div class="sp-no-attachments text-center text-muted"&gt;
      &lt;em&gt;${There are no attachments}&lt;/em&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload>
        <sys_class_name>sp_rel_widget_clone</sys_class_name>
        <sys_created_by>welchv</sys_created_by>
        <sys_created_on>2019-03-13 14:42:02</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0648e423db807bc0e3ad22d4059619ba</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>4e48e423db807bc0e3ad22d4059619b4</sys_name>
        <sys_package display_value="utassp" source="x_287765_utassp">2e58c8624f112300f006121f9310c726</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="utassp">2e58c8624f112300f006121f9310c726</sys_scope>
        <sys_update_name>sp_rel_widget_clone_0648e423db807bc0e3ad22d4059619ba</sys_update_name>
        <sys_updated_by>welchv</sys_updated_by>
        <sys_updated_on>2019-03-13 14:42:02</sys_updated_on>
    </sp_rel_widget_clone>
</record_update>
