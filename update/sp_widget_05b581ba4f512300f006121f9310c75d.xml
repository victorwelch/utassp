<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, $rootScope, $element, spUtil, $window, u_cutassp) {
	if (u_cutassp.utilIsValueValidAndTrue($scope.data.uSettings.isDebugOn)) {
		console.log((new Date()).getTime()+'.Client - '+$scope.data.infotag);
	}
	//
	/* widget controller */
	var c = this;

	c.myLabel = function (_p) { return u_cutassp.fmtLabel(_p); };
	c.myLog = function() {
		if (u_cutassp.utilIsValueValidAndTrue($scope.data.uSettings.isDebugOn)) {
			console.log((new Date()).getTime()+'.HTML View - '+$scope.data.infotag);
		}
		return '';
	};
	//

	if (typeof c.data == typeof myUndefined) { c.data = {}; }
	if (typeof c.data.articles == typeof myUndefined ) { c.data.articles = []; }
	if (typeof c.data.title == typeof myUndefined ) { c.data.title = 'Articles...'; }
	
	$rootScope.$on('myCatSelectEvent', function (event, obj) {
		//$window.location.href = '/ssp';
		$scope.data.categoryId = obj.selectionId;
		$scope.data.action = 'new';
		$scope.data.pagination.currentPage = 0;
		get();
	});
	
	//*** pagination 
  function get() {
    spUtil.update($scope);
  }
	
	$scope.previousPage = function() {
		$scope.data.action='page';
		if ($scope.data.pagination.currentPage > 1)
			$scope.data.pagination.currentPage = $scope.data.pagination.currentPage - 1;
		else 
			$scope.data.pagination.currentPage = 0;
		get();
	};

	$scope.nextPage = function() {
		$scope.data.action='page';
		$scope.data.pagination.currentPage = $scope.data.pagination.currentPage+1;
		get();
	};	
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>div.panel-heading
{
	background-image: url(utassp_kb_img.png);
	background-repeat: no-repeat;
	background-size: contain;  	
	padding-left: 40px;
}

h2.panel-title {
	color: #ffffff;
  text-shadow: 3px 3px 5px #000000;
}

.panel-body {
  padding:0px 5px 0px 5px;
}

.panel-primary  {
	background-color: $brand-primary;
}

.panel-info {
  background-color: $brand-info;
}

.panel-success {
  background-color: $brand-success;
}

.panel-warning {
  background-color: $brand-warning;
}

.panel-danger {
  background-color: $brand-danger;
}

/* ********** */
/* Pagination */
a.mybtn {
    padding: 5px 10px;
    font-size: 12px;
    line-height: 1.5;
    border-radius: 3px;
}

/* rating */
.glyphicon-hide { 
  content: "\2122";
  color:transparent !important;
}

/* ************ */
/* DivTable  */
.myDivTable{ 
  display:table; 
  width: 100%;
  table-layout: fixed;
  font-size: 12px;
}
.myDivTableRow { display:table-row; }
.myDivTableHeading { display:table-header-group;}
.myDivTableCell, .myDivTableHead { display:table-cell;}
.myDivTableHeading { display:table-header-group;}
.myDivTableFoot { display:table-footer-group;}
.myDivTableBody { display:table-row-group;}

div.myGreyGridTable {
  width:100%;
  text-align:left;
  border-collapse:collapse;
}

/* myDivTableHeading */
.myDivTable.myGreyGridTable .myDivTableHeading {
  background:#FFFFFF;
}
.myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow {
  border-bottom:1px solid #000000;
}
.myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow {
  .myDivTableHead {
    font-size:10px;
  	font-weight:bold;
  	color:#000000;
  	text-align:center;
    vertical-align: middle;
  	padding:1px 1px 1px 4px;
    border-right:1px solid #bbbbbb;  
    word-wrap: break-word;    
  }
}
.myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow   {
  .myDivTableHead.myLeft { text-align:left; }
}

/* myDivTableBody */
.myDivTable.myGreyGridTable .myDivTableBody {
	a.myDivTableRow {
  	width:100%;
  	height:100%; 
    border-bottom:1px solid white;
	}
}
.myDivTable.myGreyGridTable .myDivTableBody {
  a.myDivTableRow:hover { 
	  text-decoration:underline;
    background-color:#ffffff; 
  }
}
.myDivTable.myGreyGridTable .myDivTableBody {
	.myDivTableRow:nth-child(odd) { background: #dddddd; }
	.myDivTableRow:nth-child(even) { background: #EfEfEf; }
}
.myDivTable.myGreyGridTable .myDivTableBody
{
	.myDivTableRow:last-child { border-bottom-style:none;  }
}
.myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow {
  .myDivTableCell  {
      border-right:1px solid #bbbbbb; 
      padding:1px 4px;
  }
}
.myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow {
  .myDivTableCell.myCtr { text-align:center; }
}

.myColSpanAll { 
  display:table;
  width:100%;
	background: #EEEEEE;
  color: #444444;
}

/* Foot Style */
.myGreyGridTable .myTableFootStyle {
  font-weight:bold;
  color:#333333;
  border-top:1px solid #333333;
}

/* Link text */
a.myDivTableRow {
  color:#3a3f51;
  &amp;:hover {
    color:#428bca;
    text-decoration: underline;
  }
}

/* ********** */
// Above Medium devices (tablets, 768px and up)
@media (min-width: 768.01px) 
{
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow  {
    .myDivTableHead.myDefLgOnlyShow { display:table-cell; }
  }
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow  {
    .myDivTableHead.myDefMedUpShow { display:table-cell; }
  }
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow  {
    .myDivTableCell.myDefMedOnlyShow { display:none; }
  }  
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow {
    .myDivTableHead:nth-last-child(1) { border-right-style:none; }
  } 
  
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow  {
    .myDivTableCell.myDefLgOnlyShow { display:table-cell; }
  }  
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow  {
    .myDivTableCell.myDefMeUpShow { display:table-cell; }
  }
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow  {
    .myDivTableCell.myDefMedOnlyShow { display:none; }
  }
  
  .myCol1 { width:60% }
  .myCol2 { 
    width:20%;
  }
  .myCol3 { 
    width:30%;
    font-size:10px;
  }  
}

// Medium devices (tablets, 768px and less)
@media (max-width: 768px) { 
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow  {
    .myDivTableHead.myDefLgOnlyShow { display:none; }
  }
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow  {
    .myDivTableHead.myDefMedUpShow { display:table-cell; }
  }  
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow {
    .myDivTableHead.myDefMedOnlyShow { display:table-cell; }
  }  
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow {
    .myDivTableHead:nth-last-child(1) { border-right-style:none; }
  }    
  
 .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow {
    .myDivTableCell.myDefLgOnlyShow { display:none; }
  }   
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow  {
    .myDivTableCell.myDefMedUpShow { display:table-cell; }
  }    
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow {
    .myDivTableCell.myDefMedOnlyShow { display:table-cell; }
  }     
  
  .myCol1 { width:78% }
  .myCol2 { 
    width:10%;    
  }
  .myCol3 { 
    width:12%;
    font-size:10px;
  }  
}

// Small devices (landscape phones, 576px and less)
@media (max-width: 576px) { 
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow  {
    .myDivTableHead.myDefLgOnlyShow { display:none; }
  }
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow  {
    .myDivTableHead.myDefMedUpShow { display:none; }
  }  
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow {
    .myDivTableHead.myDefMedOnlyShow { display:none; }
  }  
  .myDivTable.myGreyGridTable .myDivTableHeading .myDivTableRow {
    .myDivTableHead:nth-last-child(1) { border-right-style:none; }
  }   
  
 .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow {
    .myDivTableCell.myDefLgOnlyShow { display:none; }
  }   
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow  {
    .myDivTableCell.myDefMedUpShow { display:none; }
  }    
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow {
    .myDivTableCell.myDefMedOnlyShow {display:none; }
  }   
  .myDivTable.myGreyGridTable .myDivTableBody .myDivTableRow {
    .myDivTableCell:nth-last-child(1) { border-right-style:none; }
  }  
  .myCol1 { width:60% }
  .myCol2 { 
    width:20%;
   
  }
  .myCol3 { 
    width:20%;
    font-size:10px;
  }  
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,color</field_list>
        <has_preview>false</has_preview>
        <id>utassp01_kb_most_viewed_widget</id>
        <internal>false</internal>
        <link/>
        <name>UTASSP KB Most Viewed Widget</name>
        <option_schema>[{"hint":"Maximum number of elements that are shown in the list of approvals","name":"maxitems","default_value":"20","label":"Max number of elements shown in the list (only positive numbers &gt; 0, 10 otherwise)","type":"integer"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function ($sp, input, data, options, gs) {
	var myU = new u_utassp();
	data.uSettings=myU.utilGetInstanceSettings();	
	// *** Start: Debug only code *** //
	data.infotag = '';
	if (myU.utilIsValueValidAndTrue(data.uSettings.isDebugOn)) {
		data.infotag = myU.utilLog($sp,'2nd Time');
	}
	// *** End: Debug only code *** //
	//
	var myPageId = $sp.getParameter('id');
	myPageId = (myPageId) ? myPageId : 'index';
	data.pageId = myPageId;	

	//we get only a max number of elements to avoid to have a big list of it
	if (typeof data.articles == typeof myUndefined) { data.articles = []; } 
	if (typeof data.title == typeof myUndefined) { data.title = {}; }

	var myTitle = options.title;
	var myMaxItems = options.maxitems;
	myMaxItems = myMaxItems>0 ? myMaxItems : 10; 
	var myFirstRow = 0;
	var myLastRow =  parseInt(myMaxItems);
	var myCurrentPage = 0;	
	//
	if (typeof data.pagination == typeof myUndefined) 
	{
		data.pagination = {};
		data.pagination.currentPage = myCurrentPage;
		data.pagination.hasNext = false;
		data.pagination.hasPrevious = false;
		data.showPagination = false;
	}

	if (typeof input != typeof myUndefined) {
		myCurrentPage = parseInt(input.pagination.currentPage);
		myFirstRow = (myCurrentPage *  parseInt(myMaxItems));
		myLastRow =  parseInt(myFirstRow) +  parseInt(myMaxItems);	
	}

	data.title = myTitle;
	var myArticleList = [];
	var myGr = new GlideRecord('kb_knowledge');
	var thisQuery = 'active=true';
	thisQuery += '^workflow_state=published';
	thisQuery += '^valid_to>javascript:gs.endOfYesterday()';
	thisQuery += '^sys_view_count>0';
	myGr.chooseWindow(myFirstRow,  myLastRow);
	myGr.addEncodedQuery(thisQuery);
	myGr.orderByDesc('sys_view_count');
	myGr.orderByDesc('published');
	myGr.query();
	var myRowCount = myGr.getRowCount();
	while (myGr.next()) 
	{
		l_item = {
			sys_id: myGr.getUniqueValue(),
			short_description: myGr.short_description.toString(),
			view_count: myGr.getValue('sys_view_count'),
			published: myGr.getDisplayValue('published')
		};		
		myArticleList.push(l_item);		
	}

	data.articles = myArticleList;
	data.pagination.hasNext = (myArticleList.length == (parseInt(myLastRow) - parseInt(myFirstRow)) && parseInt(myLastRow) < parseInt(myRowCount));
	data.pagination.hasPrevious = parseInt(myFirstRow) > 0;
	data.pagination.showPagination = data.pagination.hasPrevious || data.pagination.hasNext;
	data.pagination.currentPage = myCurrentPage;	

})($sp, input, data, options, gs);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-25 16:02:28</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>05b581ba4f512300f006121f9310c75d</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>UTASSP KB Most Viewed Widget</sys_name>
        <sys_package display_value="utassp" source="x_287765_utassp">2e58c8624f112300f006121f9310c726</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="utassp">2e58c8624f112300f006121f9310c726</sys_scope>
        <sys_update_name>sp_widget_05b581ba4f512300f006121f9310c75d</sys_update_name>
        <sys_updated_by>welchv</sys_updated_by>
        <sys_updated_on>2019-03-03 16:42:02</sys_updated_on>
        <template><![CDATA[<div>
  <div class="panel panel-{{::options.color}} b" dummy="{{::c.myLog()}}">
    <div class="panel-heading">
      <h2 class="panel-title">{{::data.title}}</h2>
    </div>
    <div class="panel-body">
      <div ng-if="(data.articles.length > 0)">
        <div class="myDivTable myGreyGridTable">
          <div class="myDivTableHeading">
            <div class="myDivTableRow">
              <div class="myDivTableHead myCol1">Description</div>
              <div class="myDivTableHead myCol2">View Count</div>
              <div class="myDivTableHead myCol3">Published</div>
            </div>
          </div>
          <div class="myDivTableBody">
            <a  ng-repeat="article in data.articles" ng-href="?id=utassp01_kb_article&sys_id={{article.sys_id}}&pageid={{data.pageId}}" class="myDivTableRow">
              <div class="myDivTableCell myCol1" >{{article.short_description}}</div>
              <div class="myDivTableCell myCtr myCol2">{{article.view_count}}</div>
              <div class="myDivTableCell myCtr myCol3">{{article.published}}</div>
            </a>
          </div>
        </div>
      </div>      
      <div ng-if="!(data.articles.length > 0)">
        <div class="myDivTable myGreyGridTable">
          <div class="myDivTableHeading">
            <div class="myDivTableRow">
              <div class="myDivTableHead myCol1">Description</div>
              <div class="myDivTableHead myCol2">View Count</div>
              <div class="myDivTableHead myCol3">Published</div>
            </div>
          </div>
        </div>
        <div class="myColSpanAll">
          No articles in selected category
        </div>
      </div>      
    </div>
    <div class="panel-{{::options.color}} panel-footer clearfix" ng-if="data.pagination.showPagination">
      <a id="previous-btn" href="javascript:void(0)" ng-click="previousPage()" ng-show="data.pagination.hasPrevious" class="pull-left btn btn-sm btn-default mybtn" aria-label="${Pagination button Previous}">
        <i class="fa fa-arrow-left m-r-sm" aria-hidden="true"></i>${&nbsp;Previous}</a>
      <a id="next_btn" href="javascript:void(0)" ng-click="nextPage()" ng-show="data.pagination.hasNext" class="pull-right btn btn-sm btn-default mybtn" aria-label="${Pagination button Next}">
        ${Next&nbsp;}<i class="fa fa-arrow-right m-r-sm col-md-offset-3" aria-hidden="true"></i></a>
    </div>
    <div class="panel-{{::options.color}} panel-footer clearfix" ng-if="!data.pagination.showPagination">
      <a id="previous-btn" href="javascript:void(0)" ng-click="previousPage()" ng-show="data.pagination.hasPrevious" class="pull-left btn btn-sm btn-default mybtn" aria-label="${Pagination button Previous}">
        <i class="fa fa-arrow-left m-r-sm" aria-hidden="true"></i>${&nbsp;Previous}</a>
      <a id="next_btn" href="javascript:void(0)" ng-click="nextPage()" ng-show="data.pagination.hasNext" class="pull-right btn btn-sm btn-default mybtn" aria-label="${Pagination button Next}">
        ${Next&nbsp;}<i class="fa fa-arrow-right m-r-sm col-md-offset-3" aria-hidden="true"></i></a>
    </div>    
  </div>
</div>



]]></template>
    </sp_widget>
</record_update>
