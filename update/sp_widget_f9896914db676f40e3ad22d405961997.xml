<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>standard</category>
        <client_script><![CDATA[function ($http, $filter, $location,spAriaUtil, $window, $scope, spAriaFocusManager, u_cutassp) {
	if (u_cutassp.utilIsValueValidAndTrue($scope.data.uSettings.isDebugOn)) {
		console.log((new Date()).getTime()+'.Client - '+$scope.data.infotag);		
	}
	//
	/* widget controller */
	var c = this;

	c.myLabel = function (_p) { return u_cutassp.fmtLabel(_p); };
	c.myLog = function() {
		if (u_cutassp.utilIsValueValidAndTrue($scope.data.uSettings.isDebugOn)) {
			console.log((new Date()).getTime()+'.HTML View - '+$scope.data.infotag);
		}
		return '';
	};
	//
	
	c.options.glyph = c.options.glyph || 'search';
	c.options.title = c.options.title || c.data.searchMsg;
	c.options.color = c.options.color || "default";
	c.searchTerm = c.data.q;

	c.onSelect = function($item, $model, $label) {
		c.searchTerm = ""; // prevents unexpected result if user quickly clicks search button after selecting
		if ($item.target)
			window.open($item.url, $item.target);
		else {
			var newUrl = $location.url($item.url);
			spAriaFocusManager.navigateToLink(newUrl.url());
		}
	};

	c.getResults = function(query) {
		var payload = {
			"query": query,
			"portal": c.data.portalID,
			"source": c.data.searchSources,
			"include_facets": false,
			"isTypeahead": true
		};
		if (c.options.limit || c.options.limit == 0)
			payload.count = c.options.limit;

		return $http.post("/api/now/sp/search", payload).then(function(response) {
			var result = response.data.result;
			spAriaUtil.sendLiveMessage(result.results.length + " " +
																 c.data.resultMsg + " " +
																 c.data.navigationMsg +
																 getNavigationKeys());
			return result.results.map(function(item) {
				var config = c.data.searchSourceConfiguration[item.__search_source_id__];
				if (config.type == "ADVANCED") {
					item.templateID = config.template;
				} else {
					item.glyph = config.glyph;
					if (!item.url && config.linkToPage) {
						item.url = "?id=" + config.linkToPage;
						if (item.sys_id)
							item.url += "&sys_id=" + item.sys_id;
						if (item.table)
							item.url += "&table=" + item.table;
					}
				}
				return item;
			});
		});
	};

	c.searchType = c.data.searchType;
	$scope.$on('$locationChangeSuccess', onLocationChangeSuccess);

	function onLocationChangeSuccess(event, newUrl, oldUrl) {
		if(searchSourceChanged(newUrl, oldUrl)) {
			var newUrlParams = newUrl.match(/t=.+/);
			if(!newUrlParams) {
				c.searchType = null;
			} else {
				c.searchType = newUrlParams[0].split("&")[0].substring(2);
			}
		}
  }

	function searchSourceChanged(newUrl, oldUrl) {
		var newUrlParams = newUrl.match(/t=.+/),
		oldUrlParams = oldUrl.match(/t=.+/);

		if(!newUrlParams && !oldUrlParams) {
			return false;
		}

		if((!newUrlParams && oldUrlParams) || (newUrlParams && !oldUrlParams)) {
			return true;
		}

		return newUrlParams[0].split("&")[0] !== oldUrlParams[0].split("&")[0];
	}

	c.submitSearch = function() {
		if (c.searchTerm) {
			var newUrl = $location.search({
				id: 'utassp01_kb_search_results',
				spa: '1',
				t: c.searchType,
				q: c.searchTerm
			});

			spAriaFocusManager.navigateToLink(newUrl.url());
		}
	};

	function getNavigationKeys() {
		if($window.navigator.userAgent.indexOf("Mac OS X") > -1)
			return 'âŒ˜';
		return 'Control';
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>div.input-group {&#13;
	margin-top:10px;  &#13;
}&#13;
&#13;
div.myShadow {&#13;
  -webkit-box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.78);&#13;
  -moz-box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.78);&#13;
  box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.78);  &#13;
}&#13;
&#13;
ul.dropdown-menu {&#13;
    min-width: 100%;&#13;
    border-radius: 0px 0px 4px 4px;&#13;
    margin:0px;&#13;
}&#13;
&#13;
ul.dropdown-menu a.ta-item {&#13;
	line-height: 20px;&#13;
}&#13;
&#13;
ul.dropdown-menu i.ta-icon, i.ta-img {&#13;
    width: 20px;&#13;
    height: 20px;&#13;
    background-size: contain;&#13;
    display: inline-block;&#13;
    background-repeat: no-repeat;&#13;
    background-position: center center;&#13;
    text-align: center;&#13;
    line-height: 20px;&#13;
    float:left;&#13;
    margin-right: 8px;&#13;
}&#13;
&#13;
input[name="q"] {&#13;
color: black;&#13;
}&#13;
&#13;
$myPublicLinkColor: #0f8c73;&#13;
.myWelcomeSpan {&#13;
  color:#ffffff;&#13;
  font-weight:bold;&#13;
  text-shadow: 11px 4px 7px #000000;&#13;
}&#13;
.myPublicBox {&#13;
  box-sizing:border-box;&#13;
  display:inline-block;&#13;
  line-height:18.5714px;&#13;
  position:relative;&#13;
  width:400px;&#13;
  }&#13;
}&#13;
a.myPublicLoginLink {&#13;
	display: block;&#13;
    padding: 10px 20px;&#13;
    color: #fff;&#13;
    font-size: 22px;&#13;
    text-align: center;&#13;
    width: 100%;&#13;
    height: 50px;&#13;
    line-height: 30px;&#13;
    cursor: pointer;&#13;
    border-radius: 5px;&#13;
    background-color:$myPublicLinkColor;  &#13;
    &amp;:hover {&#13;
      background-color:darken($myPublicLinkColor,10)&#13;
    }&#13;
}&#13;
a.myPublicPwdHelp {&#13;
  background-attachment:scroll;&#13;
  background-color:rgba(0, 0, 0, 0.4);	&#13;
  border-bottom-left-radius:15px;&#13;
  border-bottom-right-radius:15px;	&#13;
  border-top-left-radius:15px;&#13;
  border-top-right-radius:15px;&#13;
  box-sizing:border-box;&#13;
  color: #fff;&#13;
  cursor:pointer;&#13;
  display:block;&#13;
  font-size:13px;&#13;
  margin-bottom:5px;&#13;
  margin-left:115px;&#13;
  margin-right:115px;&#13;
  margin-top:5px;&#13;
  padding-bottom:4px;&#13;
  padding-left:10px;&#13;
  padding-right:10px;&#13;
  padding-top:4px;&#13;
  text-align:center;&#13;
  width:170px;  &#13;
  &amp;:hover {&#13;
    background-color:rgba(0,0,0,0.8);	&#13;
  }&#13;
}&#13;
div.myMarginTop { margin-top:10px; }&#13;
div.myCenterInline {}&#13;
div.myDivWidth {}&#13;
@media screen and (min-width: 768px)&#13;
{&#13;
  div.myCenterInline {&#13;
    text-align:center;&#13;
    display:inline-block&#13;
  }&#13;
  div.myDivWidth {&#13;
    width:400px;&#13;
  }&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>utassp01_kb_search_widget</id>
        <internal>false</internal>
        <link><![CDATA[function(scope) {
	var lazyLoader = $injector.get("lazyLoader");
	lazyLoader.putTemplates(scope.data.typeaheadTemplates);
}]]></link>
        <name>UTASSP KB Search Widget</name>
        <option_schema>[&#13;
   {&#13;
      "name":"title",&#13;
      "section":"Presentation",&#13;
      "label":"Title",&#13;
      "type":"string"&#13;
   },&#13;
   {&#13;
      "name":"color",&#13;
      "section":"Presentation",&#13;
      "label":"Color",&#13;
      "type":"string"&#13;
   },&#13;
   {&#13;
      "name":"glyph",&#13;
      "section":"Presentation",&#13;
      "label":"glyph",&#13;
      "type":"string"&#13;
   },&#13;
   {&#13;
      "name":"size",&#13;
      "section":"Presentation",&#13;
      "label":"Size",&#13;
      "type":"string"&#13;
   },&#13;
   {&#13;
      "hint":"Number of typeahead search results returned (default 15)",&#13;
      "name":"limit",&#13;
      "section":"Behavior",&#13;
      "label":"Limit",&#13;
      "type":"integer"&#13;
   },&#13;
   {&#13;
      "displayValue":"Search Source",&#13;
      "hint":"If provided, limit the scope of the typeahead search to the given search sources",&#13;
      "name":"contextual_search_sources",&#13;
      "display_value_list":[&#13;
&#13;
      ],&#13;
      "section":"Behavior",&#13;
      "label":"Contextual Search Sources",&#13;
      "type":"glide_list",&#13;
      "value":"sp_search_source",&#13;
      "ed":{&#13;
         "reference":"sp_search_source"&#13;
      }&#13;
   }&#13;
]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function($sp, input, data, options, gs) {
	var myU = new u_utassp();
	data.uSettings=myU.utilGetInstanceSettings();	
	// *** Start: Debug only code *** //
	data.infotag = '';
	if (myU.utilIsValueValidAndTrue(data.uSettings.isDebugOn)) {
		data.infotag = myU.utilLog($sp);
	}
	// *** End: Debug only code *** //
	//
	data.isLoggedIn = gs.isLoggedIn();
	var myGlobal = new global.u_utaglobalapi();
	if (options.title) {
		options.title = gs.getMessage(options.title);
	}
	data.resultMsg = gs.getMessage("Search results");
	data.navigationMsg = gs.getMessage("To navigate, use up and down arrow keys while holding ");
	data.portalID = $sp.getPortalRecord().getUniqueValue();
	data.searchMsg = gs.getMessage("Search");
	data.q = $sp.getParameter('q');

	var searchSources;
	data.searchType = null;
	data.searchSources = [];
	if ($sp.getParameter("id") == "search" && $sp.getParameter("t")) {
		data.searchType = $sp.getParameter("t");
		searchSources = myGlobal.u_$sp.getSearchSources(data.portalID);
	} else {
		var contextualSearchSourceIDs = options.contextual_search_sources || null;
		gs.info('KB Search widget -- data.portalID, contextualSearchSourceIDs:'+data.portalID+', '+contextualSearchSourceIDs);
		searchSources = myGlobal.u_$sp.getSearchSources(data.portalID, contextualSearchSourceIDs);
		gs.info('KB Search widget -- searchSources:'+searchSources.length+', '+searchSources[0]);		
		//if (searchSources.length == 1) {
		//	data.searchType = searchSources[0].id;
		//}
	}

	data.typeaheadTemplates = {};
	data.searchSourceConfiguration = {};
	searchSources.forEach(function(source) {
		if (source.isTypeaheadEnabled) {
			data.searchSources.push(source.id);
		}
		var sourceTemplateConfiguration = {};
		if (source.isAdvancedTypeaheadConfig) {
			sourceTemplateConfiguration.type = "ADVANCED";
			sourceTemplateConfiguration.template = "sp-typeahead-" + source.id + ".html";
			data.typeaheadTemplates["sp-typeahead-" + source.id + ".html"] = myGlobal.u_$sp.translateTemplate(source.typeaheadTemplate);
		} else {
			sourceTemplateConfiguration.type = "SIMPLE";
			sourceTemplateConfiguration.glyph = source.typeaheadGlyph;
			sourceTemplateConfiguration.linkToPage = source.typeaheadPage;
			if (!sourceTemplateConfiguration.linkToPage)
				console.log("Warning: No typeahead page or URL provided for search source " + source.name);
		}
		data.searchSourceConfiguration[source.id] = sourceTemplateConfiguration;
	});
})($sp, input, data, options, gs);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>welchv</sys_created_by>
        <sys_created_on>2019-02-06 20:35:26</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f9896914db676f40e3ad22d405961997</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>UTASSP KB Search Widget</sys_name>
        <sys_package display_value="utassp" source="x_287765_utassp">2e58c8624f112300f006121f9310c726</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="utassp">2e58c8624f112300f006121f9310c726</sys_scope>
        <sys_update_name>sp_widget_f9896914db676f40e3ad22d405961997</sys_update_name>
        <sys_updated_by>welchv</sys_updated_by>
        <sys_updated_on>2019-03-03 16:34:05</sys_updated_on>
        <template><![CDATA[<div ng-if="::!data.isLoggedIn" class="text-center myMarginTop">
  <div class="text-center myPublicBox">
    <a href="/utassp?id=utassp01_dummy" class="myPublicLoginLink">Login to continue Â»</a>
    <a href="https://netidss.uta.edu" class="myPublicPwdHelp">Password Reset Help</a>
  </div>
</div>
<div ng-if="::data.isLoggedIn" class="myCenterInline">
  <form ng-submit="c.submitSearch()">
    <input type="hidden" name="id" value="search"/>
    <input type="hidden" name="t" value="{{c.searchType}}"/>
    <div class="input-group input-group-{{::c.options.size}}"  dummy="{{::c.myLog()}}" >
      <!-- uses ui.bootstrap.typeahead -->
      <input name="q" type="text" placeholder="{{::c.options.title}}" ng-model="c.searchTerm"
             autocomplete="off"
             uib-typeahead="item as item.primary for item in c.getResults($viewValue)"
             typeahead-wait-ms="250"
             typeahead-focus-first="false"
             typeahead-on-select="c.onSelect($item, $model, $label)"
             typeahead-template-url="utassp01_kb_typeahead.html"
             typeahead-popup-template-url="utassp01_kb_typeahead_popup.html"
             class="form-control input-typeahead"
             role="textbox"
             aria-label="{{::c.options.title}}" tabindex="0" aria-haspopup="true">
      <span class="input-group-btn">
        <button name="search" type="submit" class="btn btn-{{::c.options.color}}"
                title="{{::c.data.searchMsg}}" aria-label="{{::c.data.searchMsg}}">
          <i ng-if="::c.options.glyph" class="fa fa-{{::c.options.glyph}}"></i>
        </button>
      </span>
    </div>
  </form>  
</div>
]]></template>
    </sp_widget>
</record_update>
