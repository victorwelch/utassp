<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$rootScope,$timeout,$location,u_cutassp) {
	console.log($scope.data.infotag+(new Date()).getTime());
	//
	/* widget controller */
	var c = this;
	var paramList = $location.search();
	var isHomePage = false;
	if (u_cutassp.utilIsValueValid(paramList.id)) {
		if (paramList.id.toString().indexOf('index')>-1) {
			isHomePage = true;
		}		
	}
	else {
		isHomePage = true;
	}
	var isHeaderMenu = u_cutassp.utilIsValueValid(paramList.ishdrmenu);
	var isRootScopeBc = u_cutassp.utilIsValueValid($rootScope.bc);
	var iLen=0;
	var bcitem = {label: $scope.page.title, url: window.location.search, level: 1};
	if (isHomePage)
	{
		//We are at the home page, so reset root breadcrumb stack
		$rootScope.bc = [];
	}
	else
	{
		//We are not at the home page, so process the breadrumb stack
		if (isRootScopeBc && !isHeaderMenu) {
			var isSamePage = false;
			var idx = $rootScope.bc.length - 1;
			if (idx>-1)
			{
				if ($rootScope.bc[idx].label == bcitem.label)
				{
					isSamePage=true;
				}
			}
			if (isSamePage) 
			{
				c.data.breadcrumbs = $rootScope.bc;	
				c.data.breadcrumbs[idx].url = bcitem.url;
			} 
			else if (u_cutassp.utilIsValueValid(paramList.level))
			{
				iLen = parseInt(paramList.level);
				c.data.breadcrumbs = $rootScope.bc.slice(0,iLen);
			}
			else
			{
				c.data.breadcrumbs = $rootScope.bc;	
				bcitem.level = c.data.breadcrumbs.length+1;
				c.data.breadcrumbs.push(bcitem);			
			}
		}
		else
		{
			c.data.breadcrumbs = [ bcitem ];
		}

		// *************************************************************************
		// *** Make sure we fire 'sp.update.breadcrumbs' event
		c.server.update().then(function(){
			console.log($scope.data.infotag+(new Date()).getTime());
			$scope.data.breadcrumbs = c.data.breadcrumbs;
			$timeout(function() {
				$rootScope.$broadcast("sp.update.breadcrumbs", $scope.data.breadcrumbs);
			});	
		});		
		//		
	}
				
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>utassp01_bread_data_std_widget</id>
        <internal>false</internal>
        <link/>
        <name>UTASSP Bread Data Std Widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function($sp, input, data, options, gs) {
	var myU = new u_utassp();
	data.isSecondTime = false;
	if (myU.utilIsValueValid(input)) {
		data.isSecondTime = true;
	} 
	data.widgettitle =  $sp.getDisplayValue("title");
	data.widgetpage = myU.utilIsValueValid($sp.getParameter('id')) ? $sp.getParameter('id') : 'utassp01_index';
	data.infotag = data.widgetpage+' > '+data.widgettitle;
	if (data.isSecondTime) {
		data.infotag +=' 2';		
	}
	data.infotag +=': ';
	gs.info(data.infotag +(new Date()).getTime());
	//
// 	/* populate the 'data' object */
// 	/* e.g., data.table = $sp.getValue('table'); */	
// 	/* ***************************************** */
	//
	if (data.isSecondTime)  //Ignore if client script has not run
	{
		if (myU.utilIsValueValid(input.breadcrumbs))  //Ignore if no breadcrumbs
		{		
			data.breadcrumbs = input.breadcrumbs;
			var idx = data.breadcrumbs.length-1;
			if (idx>-1)
			{
				var thisUrl = data.breadcrumbs[idx].url;  // Current url
				var myIsPageIdList = myU.utilGetIsPageIdList(thisUrl); // Get list of booleans
				//for (var p in myIsPageIdList)
				//{
				//	gs.info('myIsPageIdList.'+p+': '+ myIsPageIdList[p]);
				//}
				// Handle special case: form, kb_article, or sc_cat_item
				switch(true)
				{
					case myIsPageIdList.form:
						var myFormTable = $sp.getParameter('table');
						var myFormSysId = $sp.getParameter('sys_id');
						var myFormGr = new GlideRecord(myFormTable);
						if (myFormGr.get(myFormSysId))
						{
							var myFormLabel = myFormGr.getDisplayValue('number');
							data.breadcrumbs[idx].label = myFormLabel;
						}
						break;
					case myIsPageIdList.kb_article:
						// Get Kb Article label
						var myKbArtSysId = $sp.getParameter("sys_id");
						var myKbArtLabel = myU.getKbCategoryListForArticle(myKbArtSysId);
						data.breadcrumbs[idx].label = myKbArtLabel;							
						break;
					case myIsPageIdList.sc_cat_item:
						// Get Sc_Cat_Item label
						var myCatItemSysId = $sp.getParameter("sys_id");
						var myScGr = new GlideRecord('sc_cat_item');
						if (myScGr.get(myCatItemSysId))
						{
							var myScLabel= myScGr.getDisplayValue('name');
							data.breadcrumbs[idx].label = myScLabel;
						}						
						break;						
				}
			}
		}
	}			
})($sp, input, data, options, gs);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-12-04 15:39:43</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3d108fa34f022300f006121f9310c7df</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>UTASSP Bread Data Std Widget</sys_name>
        <sys_package display_value="utassp" source="x_287765_utassp">2e58c8624f112300f006121f9310c726</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="utassp">2e58c8624f112300f006121f9310c726</sys_scope>
        <sys_update_name>sp_widget_3d108fa34f022300f006121f9310c7df</sys_update_name>
        <sys_updated_by>welchv</sys_updated_by>
        <sys_updated_on>2018-12-14 20:37:17</sys_updated_on>
        <template><![CDATA[<!-- dummy widget template
<div>
</div>
 -->]]></template>
    </sp_widget>
</record_update>
